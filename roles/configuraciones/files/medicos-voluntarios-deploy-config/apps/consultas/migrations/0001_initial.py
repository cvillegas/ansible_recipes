# Generated by Django 3.0.5 on 2020-04-04 03:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("especialidades", "0001_initial"),
        ("medicos", "0001_initial"),
        ("persona", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Consulta",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "telefono",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, verbose_name="Teléfono"
                    ),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                ("lugar", models.CharField(max_length=255, verbose_name="Lugar")),
                (
                    "origen",
                    models.CharField(
                        choices=[("web", "Web"), ("whatsapp", "Whatsapp")],
                        max_length=32,
                        verbose_name="Origen",
                    ),
                ),
                (
                    "detalle_dolencias",
                    models.TextField(verbose_name="Detalle de dolencias"),
                ),
                (
                    "tiempo_dolencias",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Tiempo de dolencias",
                    ),
                ),
                (
                    "medicamentos",
                    models.TextField(
                        blank=True, null=True, verbose_name="Medicamentos"
                    ),
                ),
                (
                    "fuma",
                    models.TextField(blank=True, null=True, verbose_name="¿Fuma?"),
                ),
                (
                    "drogas",
                    models.TextField(
                        blank=True, null=True, verbose_name="¿Consume alcohol ó drogas?"
                    ),
                ),
                (
                    "comentarios",
                    models.TextField(
                        blank=True, null=True, verbose_name="Comentarios del médico"
                    ),
                ),
                (
                    "asignada",
                    models.BooleanField(default=False, verbose_name="¿Asignada?"),
                ),
                (
                    "atendida",
                    models.BooleanField(default=False, verbose_name="¿Atendida?"),
                ),
                (
                    "latitud",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                        verbose_name="Latitud",
                    ),
                ),
                (
                    "longitud",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                        verbose_name="Longitud",
                    ),
                ),
                (
                    "creada_en",
                    models.DateTimeField(
                        auto_now_add=True,
                        null=True,
                        verbose_name="Fecha y hora de creación",
                    ),
                ),
                (
                    "asignada_en",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha y hora de asignación"
                    ),
                ),
                (
                    "atendida_en",
                    models.DateTimeField(
                        auto_now_add=True,
                        null=True,
                        verbose_name="Fecha y hora de atención",
                    ),
                ),
                (
                    "actualizada_en",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha y hora de actualización",
                    ),
                ),
                (
                    "especialidad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="consultas",
                        to="especialidades.Especialidad",
                        verbose_name="Especialidad",
                    ),
                ),
                (
                    "medico_asignado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="consultas_asignadas",
                        to="medicos.Medico",
                        verbose_name="Médico asignado",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="consultas",
                        to="persona.Persona",
                        verbose_name="Persona",
                    ),
                ),
            ],
            options={"verbose_name": "consulta", "verbose_name_plural": "consultas",},
        ),
    ]
